General Command Arguments
-------------------------

The {{{cli_product}}} command line interface supports the following arguments with any command:

* :ref:`-h <generalH>`
* :ref:`{{{dash_dash}}}verify <generalVerify>`

These arguments are all optional but must be specified after the command and in the order listed above if used. Some commands may require command-specific arguments between the general command arguments. Refer to the documentation for each command for specifics.

.. _generalH:

-h
~~

-h provides a list of available arguments with brief descriptions for the current command.

Syntax
++++++

``{{{cli_command}}} <command> -h``

Equivalent Options
++++++++++++++++++

The following arguments are equivalent to -h:

* {{{dash_dash}}}help

Constraints and Usage Notes
+++++++++++++++++++++++++++

If -h is specified, nothing else in the command is evaluated.

Using -h as a command level argument does not provide any specifics about the available top level arguments or available commands.

Because the {{{cli_product}}} command line interface is order dependent, the following commands are not equivalent:

``{{{cli_command}}} -h``

and

``{{{cli_command}}} <command> -h``

Further, if you specify the following:

``{{{cli_command}}} -h <command> -h``

only the first -h is evaluated; no information about <command> will be returned.

.. _generalVerify:

{{{dash_dash}}}verify
~~~~~~~~~~~~~~~~~~~~~

.. ifconfig:: 'off' in verify_state
   
   This option is internal and should not be used. In the future, it may be used to verify tokens, but such verification is not supported at this time.

.. ifconfig:: 'on' in verify_state
   
   {{{dash_dash}}}verify indicates that the token signatures should be verified to ensure that the supplied token was generated by {{{cli_product}}}.
   
.. ifconfig:: 'on' in verify_state and 'draft' in publish_state
   
   [[JMK are we verifying from the state file for the user? 
   Not entirely sure how this part works]]

.. ifconfig:: 'on' in verify_state
   
   Syntax
   ++++++
   
   ``{{{cli_command}}} <command> ... {{{dash_dash}}}verify ...``
   
   Equivalent Options
   ++++++++++++++++++
   
   The following arguments are equivalent to {{{dash_dash}}}verify:
   
   * {{{dash_dash}}}verify-tokens
   * {{{dash_dash}}}require-verification
   
   Constraints and Usage Notes
   +++++++++++++++++++++++++++
   
   Coming soon.
